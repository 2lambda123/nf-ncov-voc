/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTP {
        publishDir = [
            path: { "${params.outdir}/FASTP" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-l 70 -x --cut_tail --cut_tail_mean_quality 20 --detect_adapter_for_pe'
    }
    
    withName: MINIMAP2_ALIGN_HOST{
        publishDir = [
            path: { "${params.outdir}/MINIMAP2_ALIGN_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-ax sr'
    }

    withName: MINIMAP2_ALIGN_VIRAL{
        publishDir = [
            path: { "${params.outdir}/MINIMAP2_ALIGN_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-ax sr'
    }

    withName: BWA_INDEX_HOST {
        publishDir = [
            path: { "${params.outdir}/BWA_INDEX_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BWA_MEM_HOST {
        publishDir = [
            path: { "${params.outdir}/BWA_MEM_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BWA_INDEX_VIRAL {
        publishDir = [
            path: { "${params.outdir}/BWA_INDEX_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BWA_MEM_VIRAL {
        publishDir = [
            path: { "${params.outdir}/BWA_MEM_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: SAMTOOLS_INDEX_HOST {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_INDEX_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: SAMTOOLS_INDEX_VIRAL {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_INDEX_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: SAMTOOLS_FLAGSTAT_HOST {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_FLAGSTAT_HOST" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMTOOLS_FLAGSTAT_VIRAL {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_FLAGSTAT_VIRAL" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: SAMTOOLS_VIEW {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_VIEW" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-f4 -b'
        ext.prefix = { "${meta.id}.unmapped" }
    }
    
    withName: SAMTOOLS_FASTQ {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_FASTQ" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: articDownloadScheme {
        publishDir = [
            path: { "${params.outdir}/articDownloadScheme" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: IVAR_TRIM {
        publishDir = [
            path: { "${params.outdir}/IVAR_TRIM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]   
        ext.prefix = { "${meta.id}.ivar" }
    }

    withName: SAMTOOLS_SORT {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_SORT" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]   
        ext.prefix = { "${meta.id}.ivar.sorted" }
    }

    withName: SAMTOOLS_INDEX_IVAR {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS_INDEX_IVAR" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FREYJA_UPDATE {
        publishDir = [
            path: { "${params.outdir}/FREYJA_UPDATE" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: FREYJA_VARIANTS {
        publishDir = [
            path: { "${params.outdir}/FREYJA_VARIANTS" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: IVAR_VARIANTS_TO_VCF {
        publishDir = [
            path: { "${params.outdir}/IVAR_VARIANTS_TO_VCF" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FREYJA_DEMIX {
        publishDir = [
            path: { "${params.outdir}/FREYJA_DEMIX" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BCFTOOLS_NORM {
        publishDir = [
            path: { "${params.outdir}/BCFTOOLS_NORM" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--output-type v' 
         
    }

    withName: SNPEFF_ANN {
        publishDir = [
            path: { "${params.outdir}/SNPEFF_ANN" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-formatEff -hgvs1LetterAa -hgvsOld' 
         
    }

    withName: SNPEFF_BUILD {
        publishDir = [
            path: { "${params.outdir}/SNPEFF_BUILD" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-genbank' 
         
    }

    withName: annotate_mat_peptide {
        publishDir = [
            path: { "${params.outdir}/annotate_mat_peptide" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
         
    }

    withName: vcfTogvf {
        publishDir = [
            path: { "${params.outdir}/vcfTogvf" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
         
    }


    

}
